name: CI

on: [push, pull_request]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      ctfd:
        image: ctferio/ctfd:3.8.0-0.6.2@sha256:4bbd3994a732ddee96fee78283081777be02d8d4d3de8ab9dc6d6e71c300ce0c
        ports:
          - 8000:8000
        env:
          PLUGIN_SETTINGS_CM_API_URL: http://chall-manager:8080
          PLUGIN_SETTINGS_CM_MANA_TOTAL: 10

      chall-manager: 
        image: ctferio/chall-manager:v0.5.3@sha256:a288f140ea3f5cc3d6f225a3439554ff7b888d2ef304c437852bce79e9ac0337
        env:
          OCI_INSECURE: true
        ports:
          - 8080:8080

      registry:
        image: registry:3
        ports:
          - 5000:5000
    env:
      NAME: ctfer
      PASSWORD: password
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: go.mod

      - name: Cache go modules
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Wait for CTFd server
        run: |
          max_attempts=60
          base_url="http://localhost:8000"
          for ((i=0; i<$max_attempts; i++)); do
            if curl --head --fail --silent --show-error "$base_url" >/dev/null; then
              echo "Server is up and running!"
              break
            else
              echo "Waiting for the server to respond... (attempt $((i+1)))"
              sleep 5
            fi
          done
          if [ $i -eq $max_attempts ]; then
            echo "Server did not respond within the allotted time. Exiting..."
            exit 1
          fi

      - name: Export registry URL
        id: registry
        run: |
          name=$(docker ps --format="{{.Names}}" | grep registry)
          echo "ip=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $name)" >> "$GITHUB_OUTPUT"

      - name: Setup CTFd
        uses: ctfer-io/ctfd-setup@e11df98977827a789d3e07537790a3b64091493b # v1.6.0
        with:
          url: 'http://ctfd:8000'
          appearance_name: TFP-CTFd
          appearance_description: Terraform Provider CTFd.
          mode: teams
          admin_name: ${{ env.NAME }}
          admin_email: ctfer-io@protonmail.com
          admin_password: ${{ env.PASSWORD }}

      - name: Run go acceptance tests
        run: make test-acc
        env:
          CTFD_URL: http://localhost:8000
          CTFD_ADMIN_USERNAME: ${{ env.NAME }}
          CTFD_ADMIN_PASSWORD: ${{ env.PASSWORD }}
          REGISTRY: ${{ steps.registry.outputs.ip }}:5000

      - name: Upload coverage to Coveralls
        uses: shogo82148/actions-goveralls@25f5320d970fb565100cf1993ada29be1bb196a1 # v1.10.0
        with:
          path-to-profile: cov.out

  go-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: go.mod

      - name: go-lint
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
